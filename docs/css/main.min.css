/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
@-webkit-keyframes fade {
  from {
    opacity: 0;
    transform: translateY(60px);
  }
  to {
    opacity: 1;
    transform: translateY(0px);
  }
}
@keyframes fade {
  from {
    opacity: 0;
    transform: translateY(60px);
  }
  to {
    opacity: 1;
    transform: translateY(0px);
  }
}
@-webkit-keyframes stick-blue {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(15deg);
    left: 30px;
  }
}
@keyframes stick-blue {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(15deg);
    left: 30px;
  }
}
@-webkit-keyframes stick-orange {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(35deg);
  }
}
@keyframes stick-orange {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(35deg);
  }
}
@-webkit-keyframes stick-gray {
  from {
    transform: rotate(0deg);
    left: 0;
  }
  to {
    transform: rotate(55deg);
    left: -10px;
  }
}
@keyframes stick-gray {
  from {
    transform: rotate(0deg);
    left: 0;
  }
  to {
    transform: rotate(55deg);
    left: -10px;
  }
}
@-webkit-keyframes shake {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-45deg);
  }
  65% {
    transform: rotate(45deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
@keyframes shake {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-45deg);
  }
  65% {
    transform: rotate(45deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
* {
  box-sizing: border-box;
}

html, body {
  height: 100%;
  font-family: Montserrat;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  text-decoration: none;
  line-height: 1.42em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@media screen and (max-width: 580px) {
  html, body {
    font-size: 14px;
  }
}

h1, h2, h3, h4, h5, h6 {
  font-family: inherit;
  margin: 0;
  padding: 0;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: row;
}

a {
  cursor: pointer;
  text-decoration: none;
  color: inherit;
}

section, header, footer {
  width: 100%;
}

.wrapper {
  overflow: hidden;
  display: flex;
  flex-direction: column;
}
.wrapper-content {
  position: relative;
  flex: 1;
}

.container {
  max-width: 1140px;
  width: 100%;
  margin: 0 auto;
}
@media screen and (max-width: 1024px) {
  .container {
    max-width: 100%;
    padding: 0 15px;
  }
}

.logo__icon {
  transition: 0.3s ease;
  fill: rgb(80, 80, 80);
  width: 9.125rem;
  height: 4.6875rem;
}
.logo__icon:hover {
  fill: black;
}

.menu {
  max-width: 325px;
  width: 100%;
}
@media screen and (max-width: 580px) {
  .menu {
    display: none;
  }
}
.menu__list {
  justify-content: space-between;
}
.menu__item {
  white-space: nowrap;
  transition: 0.3s ease;
}
.menu__item:hover:nth-of-type(odd) {
  color: #E3513D;
}
.menu__item:hover:nth-of-type(even) {
  color: #456BCC;
}
.menu__link {
  font-weight: 600;
  font-size: 1.125rem;
}

.hamburger {
  cursor: pointer;
  display: none;
  width: 40px;
  height: 35px;
  flex-direction: column;
  justify-content: space-between;
}
.hamburger__item {
  height: 15%;
  background-color: #505050;
}
@media screen and (max-width: 580px) {
  .hamburger {
    display: flex;
  }
}

.social {
  max-width: 201px;
  width: 100%;
}
.social__list {
  justify-content: space-between;
}
.social__item, .social__link {
  display: flex;
  justify-content: center;
  align-items: center;
}
.social__item {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background: linear-gradient(45deg, #456BCC, #E3513D);
  transition: transform 0.3s ease;
}
@media screen and (max-width: 580px) {
  .social__item {
    width: 42px;
    height: 42px;
  }
}
.social__item:hover {
  transform: scale(1.2);
  filter: drop-shadow(0px 0px 4px rgba(0, 0, 0, 0.2));
}
.social__link {
  border-radius: 50%;
  background-color: black;
  height: 88%;
  width: 88%;
}
.social__icon {
  fill: white;
  width: 65%;
  height: 65%;
}

.heading {
  font-size: 4rem;
  font-weight: bold;
  letter-spacing: 0.05em;
  line-height: normal;
}
.heading--under {
  border-bottom: 0.25rem solid black;
}

.button {
  display: inline-block;
  font-size: 0.875rem;
  color: white;
  text-align: center;
  line-height: 1.5em;
  padding: 0.2em 1.8em;
  background-color: #456BCC;
  border-radius: 4.5em;
  transition: 0.3s ease;
}
.button:hover {
  transform: scale(1.1);
  filter: drop-shadow(0px 0px 8px rgba(0, 0, 0, 0.3));
  background-color: #597bd1;
}

.question__link {
  display: flex;
  flex-direction: row;
}
.question__link:hover {
  text-decoration: underline;
}
.question__link:hover .question__icon {
  -webkit-animation: shake 0.4s ease;
          animation: shake 0.4s ease;
}
.question__icon {
  width: 48px;
  height: 48px;
  margin-right: 1.1875rem;
  transition: 0.3s ease;
}
.question__desc {
  max-width: 5.1875rem;
  width: 100%;
  font-size: 1rem;
  line-height: 150%;
}

@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local(""), url("../fonts/Montserrat-Bold.woff2") format("woff2"), url("../fonts/Montserrat-Bold.woff") format("woff");
}
@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: local(""), url("../fonts/Montserrat-Light.woff2") format("woff2"), url("../fonts/Montserrat-Light.woff") format("woff");
}
@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local(""), url("../fonts/Montserrat-Medium.woff2") format("woff2"), url("../fonts/Montserrat-Medium.woff") format("woff");
}
@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local(""), url("../fonts/Montserrat-Regular.woff2") format("woff2"), url("../fonts/Montserrat-Regular.woff") format("woff");
}
@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: local(""), url("../fonts/Montserrat-SemiBold.woff2") format("woff2"), url("../fonts/Montserrat-SemiBold.woff") format("woff");
}
.header {
  position: absolute;
  z-index: 10;
  left: 50%;
  top: 14px;
  transform: translateX(-50%);
}
.header__container {
  width: auto;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .header__container {
    justify-content: space-evenly;
  }
}
@media screen and (max-width: 580px) {
  .header__container {
    justify-content: space-between;
  }
}

.hero {
  background-color: #F2F2F2;
  overflow: hidden;
}
.hero__container {
  height: 800px;
  display: flex;
  flex-direction: row;
  align-items: flex-end;
}
@media screen and (max-width: 580px) {
  .hero__container {
    height: 100vh;
  }
}
.hero__promo {
  height: 100%;
  max-width: 58%;
  display: flex;
  align-items: flex-end;
  position: relative;
}
@media screen and (max-width: 1024px) {
  .hero__promo {
    max-width: 50%;
  }
}
@media screen and (max-width: 768px) {
  .hero__promo {
    flex: 0;
    width: 0;
    position: static;
  }
}
.hero__img {
  pointer-events: none;
  position: relative;
  z-index: 5;
  width: 885px;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  -webkit-animation: fade 0.8s ease forwards;
          animation: fade 0.8s ease forwards;
}
@media screen and (max-width: 1024px) {
  .hero__img {
    width: 740px;
  }
}
@media screen and (max-width: 768px) {
  .hero__img {
    position: absolute;
    width: 820px;
    left: -20%;
    bottom: -25%;
  }
}
@media screen and (max-width: 580px) {
  .hero__img {
    display: none;
  }
}
.hero__dec {
  position: absolute;
  top: 15px;
  left: 0;
}
@media screen and (max-width: 1024px) {
  .hero__dec {
    left: -15px;
    top: 30px;
  }
}
@media screen and (max-width: 768px) {
  .hero__dec {
    left: -82px;
    top: 259px;
  }
}
@media screen and (max-width: 580px) {
  .hero__dec {
    left: -250px;
    bottom: -15px;
  }
}
.hero__dec-item {
  position: absolute;
  border-radius: 189px;
  width: 198px;
  height: 603px;
  transform-origin: 50% 95%;
  transform: rotate(0deg);
  transition: transform 0.3s ease;
  box-shadow: 0px 0px 8px 2px rgba(0, 0, 0, 0.25);
}
.hero__dec-item:nth-of-type(1) {
  background-color: #456BCC;
  left: 6px;
  -webkit-animation: stick-blue 1.2s ease forwards 0.4s;
          animation: stick-blue 1.2s ease forwards 0.4s;
}
.hero__dec-item:nth-of-type(2) {
  background-color: #E3513D;
  -webkit-animation: stick-orange 1.2s ease forwards 0.2s;
          animation: stick-orange 1.2s ease forwards 0.2s;
  z-index: 3;
}
.hero__dec-item:nth-of-type(3) {
  background-color: #E7E7E7;
  -webkit-animation: stick-gray 1.2s ease forwards;
          animation: stick-gray 1.2s ease forwards;
  top: -25px;
}
.hero__main {
  position: relative;
  height: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  z-index: 7;
  flex: 1;
}
@media screen and (max-width: 768px) {
  .hero__main {
    justify-content: flex-end;
  }
}
@media screen and (max-width: 580px) {
  .hero__main {
    justify-content: center;
  }
}
.hero__content {
  transform: translateY(-60px);
  width: 100%;
}
@media screen and (max-width: 1024px) {
  .hero__content {
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
  }
}
@media screen and (max-width: 768px) {
  .hero__content {
    transform: translateY(-150px);
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
  }
}
@media screen and (max-width: 580px) {
  .hero__content {
    transform: translateY(0);
  }
}
.hero__offer {
  max-width: 21.25rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  width: 100%;
  margin-bottom: 1.375rem;
}
.hero__heading {
  font-size: 1rem;
  line-height: 150%;
  font-weight: 300;
}
.hero__title {
  white-space: nowrap;
  margin-bottom: 0.75rem;
}
.hero__social {
  align-self: flex-end;
}
.hero__CTA {
  max-width: 413px;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */